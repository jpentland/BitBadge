{
  "name": "ethereumjs-util",
  "version": "1.3.7",
  "description": "a collection of utility functions for Ethereum",
  "main": "index.js",
  "scripts": {
    "test": "mocha ./test/index.js",
    "compile": "browserify index.js -s ethUtils > ethUtils.js"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/ethereum/ethereumjs-utils.git"
  },
  "keywords": [
    "ethereum",
    "utilties"
  ],
  "author": {
    "name": "mjbecze",
    "email": "mjbecze@gmail.com"
  },
  "license": "MPL-2.0",
  "bugs": {
    "url": "https://github.com/ethereum/ethereumjs-utils/issues"
  },
  "homepage": "https://github.com/ethereum/ethereumjs-utils",
  "dependencies": {
    "bn.js": "^3.0.1",
    "browserify-sha3": "0.0.0",
    "elliptic": "^5.0.0",
    "rlp": "^1.0.1",
    "sha3": "^1.1.0"
  },
  "browser": {
    "sha3": "browserify-sha3"
  },
  "testling": {
    "browsers": [
      "ie/9..latest",
      "firefox/15..latest",
      "chrome/22..latest"
    ],
    "harness": "mocha-bdd",
    "files": [
      "test/index.js"
    ]
  },
  "devDependencies": {
    "mocha": "^2.1.0"
  },
  "gitHead": "b0cdabd7247e0094df906418192c10998df4e6b3",
  "_id": "ethereumjs-util@1.3.7",
  "_shasum": "501e024c51b1e3574e0cb88e112aac26ef6d88ce",
  "_from": "ethereumjs-util@1.3.7",
  "_npmVersion": "2.13.5",
  "_nodeVersion": "0.12.7",
  "_npmUser": {
    "name": "null_radix",
    "email": "mjbecze@gmail.com"
  },
  "dist": {
    "shasum": "501e024c51b1e3574e0cb88e112aac26ef6d88ce",
    "tarball": "http://registry.npmjs.org/ethereumjs-util/-/ethereumjs-util-1.3.7.tgz"
  },
  "maintainers": [
    {
      "name": "null_radix",
      "email": "mjbecze@gmail.com"
    }
  ],
  "directories": {},
  "_resolved": "https://registry.npmjs.org/ethereumjs-util/-/ethereumjs-util-1.3.7.tgz",
  "readme": "# SYNOPSIS [![Build Status](https://travis-ci.org/ethereum/ethereumjs-util.svg)](https://travis-ci.org/ethereum/ethereumjs-util)\nA collection of utility functions for ethereum. It can be used in node.js or can be in the browser with browserify.\n\n# CONTACT\n [Scrollback](https://scrollback.io/ethereumjs/all/all-messages) or #ethereumjs on freenode\n\n# API\n## properties\n - `MAX_INTEGER`  - The max interger that the VM can handle\n -  `TWO_POW256` - 2^256\n -  `SHA3_NULL` - SHA3-256 hash of `null`\n -  `SHA3_RLP_ARRAY` - SHA3-256 of an rlp of an empty array\n -  `SHA3_RLP` - SHA3-256 hash of the rlp of `null`\n -  `ETH_UNITS` - an array of ethereum units\n -  [`BN`](https://github.com/indutny/bn.js)\n -  [`rlp`](https://github.com/wanderer/rlp)\n\n## methods \n### `zeros(number)`\nReturns buffer filled with 0's\n- `number` - the number bytes to to return\n\n### `pad(val, length)`\npads an `array` or `buffer` with leading zeros till it has `length` bytes\n- `val`  - the value to pad\n- `length` - the of the resulting value\n\n### `unpad(val)`\nTrims leading zeros from a buffer or an array\n- `val` - a `buffer` to unpad\n\n### `intToHex(int)`\nConverts an `Integer` into a hex `String`\n- `int`\n\n### `intToBuffer(int)`\nConverts an `Integer` to a `Buffer`\n- `int`\n\n### `bufferToInt(buf)`\nconverts a `Buffer` to an `Interger`\n- `buf`\n\n### `fromSigned(buf)`\ninterpets a `Buffer` as a signed `Integer` and returns a `Bignum`\n- `buf`\n\n### `toUnsigned(num)`\nConverts a `bignum` to an unsigned interger and returns it as a `buffer`\n- `num` - a `bignum`\n\n### `publicToAddress(pubKey)`\nReturns the ethereum address of a given public key\n- `pubKey` - the public key as a `buffer`\n\n### `privateToAddress(privateKey)`\nReturns the ethereum address of a given private key\n- `privateKey` - the private key as a `buffer`\n\n### `privateToPublic(privateKey)`\nReturns the ethereum public key of a given private key\n- `privateKey` - the private key as a `buffer`\n\n### `generateAddress(from, nonce)` \nGenerates an address of a newly created contract. \n- `from` - the address of the account creating the contract\n- `nonce` - the creating accounts nonce\n\n### `sha3(a, bytes)`  \nReturns a sha3 of `a` of the length of `bytes`\n- `a` the value to hash\n- `bytes` how many bytes the hash should be\n\n### `printBA(ba)`\nPrint a Buffer Array\n- `ba` - an `Array` of `Buffers`\n\n### `baToJSON(ba)`\nconverts a buffer array to JSON\n- `ba` - an `Array` of `Buffers`\n\n### `isHexPrefixed(String)`\nReturns a Boolean on whether or not the a sting starts with `0x`\n\n### `stripHexPrefix(String)`\nRemoves `0x` from a given String\n\n### `addHexPrefix(String)`\nAdds `0x` to a given string if it does not already start with `0x`\n\n### `defineProperties(self, fields)`\ndefines properties on a `Object`\n- `self` - the `Object` to define properties on\n- `fields` - an array fields to define\n\n### `validate(fields, data)`\nValidate defined fields\n- `fields`\n- `data`\n\n# TESTING\nNode.js Tests use Mocha. Test in the browser use Testling.\n\n# LICENSE\nMPL-2.0\n",
  "readmeFilename": "README.md"
}
